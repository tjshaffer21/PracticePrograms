--
-- Project Euler
-- Problem 2
-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be:
-- 1,2,3,5,8,13,21,34,55,89,...
-- By considering the terms in the Fibonacci sequence whose values do not exceed
-- four million, find the sum of the even-valued terms.
--

fibonacci :: Int -> [Integer]
fibonacci 0 = [0]
fibonacci 1 = [0,1]
fibonacci n =
    let 
        series = fibonacci (n-1)
        value = (series !! (n-1) + series !! (n-2))
        newSeries = series ++ [value]
    in newSeries

listFibSeries :: Int -> [Integer]
listFibSeries n = [x | x <- fibonacci n, x <= 4000000, mod x 2 == 0]

sumList list = sum list

main = do
    putStrLn "Sum of the even valued terms of the fibonacci series no greater than four million is: "
    putStrLn (show (sumList (listFibSeries 100)))
